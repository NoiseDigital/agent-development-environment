{
    "options": {
        "allow-unauthenticated": true,
        "memory": "32Gi",
        "cpu": "8",
        "port": 8080,
        "http2": false
    },
    "build": {
        "skip": true
    },
    "hooks": {
        "prebuild": {
            "commands": [
                "gcloud config set project ${GOOGLE_CLOUD_PROJECT} -q",
                "gcloud services enable aiplatform.googleapis.com cloudbuild.googleapis.com run.googleapis.com firestore.googleapis.com bigquery.googleapis.com --project=${GOOGLE_CLOUD_PROJECT} || true",
                "pip install -q -U google-cloud-bigquery google-cloud-bigquery-storage",
                "git clone --depth 1 --no-tags https://github.com/vladkol/sfdc-kittycorn ./data; rm -rf ./data/.git/"
            ]
        },
        "postbuild": {
            "commands": [
                "echo GOOGLE_CLOUD_PROJECT=\"${GOOGLE_CLOUD_PROJECT}\" >>  src/.env",
                "echo GOOGLE_CLOUD_LOCATION=\"${GOOGLE_CLOUD_REGION}\" >>  src/.env",
                "echo GOOGLE_GENAI_USE_VERTEXAI=1 >>  src/.env",
                "echo AGENT_NAME=\"crm-data-agent\" >>  src/.env",
                "echo FIRESTORE_SESSION_DATABASE=\"agent-sessions\" >>  src/.env",
                "echo AI_STORAGE_BUCKET=\"crm-data-agent-artifacts--${GOOGLE_CLOUD_PROJECT}\" >>  src/.env",
                "echo BQ_LOCATION=\"US\" >>  src/.env",
                "echo SFDC_BQ_DATASET=\"sfdc_data\" >>  src/.env",
                "source src/.env; gcloud firestore databases describe --database=${FIRESTORE_SESSION_DATABASE} --project=${GOOGLE_CLOUD_PROJECT} -q &> /dev/null || gcloud firestore databases create --database=${FIRESTORE_SESSION_DATABASE} --project=${GOOGLE_CLOUD_PROJECT} --location=${GOOGLE_CLOUD_REGION}",
                "source src/.env; gcloud storage buckets describe gs://${AI_STORAGE_BUCKET} -q &> /dev/null || gcloud storage buckets create gs://${AI_STORAGE_BUCKET} --project=${GOOGLE_CLOUD_PROJECT} --location=${GOOGLE_CLOUD_REGION}",
                "source src/.env; python3 ./data/deploy_to_my_project.py --project ${GOOGLE_CLOUD_PROJECT} --dataset ${SFDC_BQ_DATASET} --location ${BQ_LOCATION}",
                "docker build -t ${IMAGE_URL} ./src"
            ]
        }
    }
}
