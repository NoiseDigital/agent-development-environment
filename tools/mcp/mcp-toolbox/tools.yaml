sources:
 my-bq-source:
   kind: bigquery
   project: nd-agentspace-sbx
## TODO: Rewrite toolset for Noise's media data model and to be better for visualizations
tools:
 search_release_notes_bq:
   kind: bigquery-sql
   source: my-bq-source
   statement: |
    SELECT
     product_name,description,published_at
    FROM
      `bigquery-public-data`.`google_cloud_release_notes`.`release_notes`
    WHERE
     DATE(published_at) >= DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)
    GROUP BY product_name,description,published_at
    ORDER BY published_at DESC
   description: |
    Use this tool to get information on Google Cloud Release Notes.
    
 analyze_media_performance:
    kind: bigquery-sql
    source: my-bq-source
    parameters:
      - name: date_from
        type: string
        description: Start date for analysis (YYYY-MM-DD format, optional)
      - name: date_to
        type: string
        description: End date for analysis (YYYY-MM-DD format, optional)
      - name: campaign_phase_filter
        type: string
        description: Filter by campaign phase (optional)
      - name: publisher_filter
        type: string
        description: Filter by publisher (optional)
    statement: |
      SELECT
        date_time as date,
        campaign_phase,
        publisher,
        platform,
        SUM(impressions) AS total_impressions,
        SUM(spend) AS total_spend,
        SUM(clicks) AS total_clicks,
        SAFE_DIVIDE(SUM(clicks), NULLIF(SUM(impressions), 0)) AS click_through_rate,
        SAFE_DIVIDE(SUM(spend), NULLIF(SUM(impressions), 0)) AS cost_per_impression
      FROM
        `nd-agentspace-sbx.media_performance.performance`
      WHERE
        (@date_from IS NULL OR date_time >= PARSE_DATE('%Y-%m-%d', @date_from))
        AND (@date_to IS NULL OR date_time <= PARSE_DATE('%Y-%m-%d', @date_to))
        AND (@campaign_phase_filter IS NULL OR LOWER(campaign_phase) LIKE LOWER(CONCAT('%', @campaign_phase_filter, '%')))
        AND (@publisher_filter IS NULL OR LOWER(publisher) LIKE LOWER(CONCAT('%', @publisher_filter, '%')))
      GROUP BY date_time, campaign_phase, publisher, platform
      ORDER BY date_time DESC, total_spend DESC
    description: |
      Analyze media performance by campaign phase, publisher and platform, with optional date and filter parameters.
 summarize_media_performance:
    kind: bigquery-sql
    source: my-bq-source
    parameters:
      - name: date_from
        type: string
        description: Start date for summary (YYYY-MM-DD format, optional)
      - name: date_to
        type: string
        description: End date for summary (YYYY-MM-DD format, optional)
    statement: |
      SELECT
        SUM(impressions) AS total_impressions,
        SUM(spend) AS total_spend,
        SUM(clicks) AS total_clicks,
        SUM(landing_page_views) AS total_landing_page_views,
        SUM(brochure_views) AS total_brochure_views,
        SUM(completed_views) AS total_completed_views,
        COUNT(DISTINCT campaign_phase) AS campaign_phase_count,
        COUNT(DISTINCT publisher) AS publisher_count,
        COUNT(DISTINCT platform) AS platform_count,
        SAFE_DIVIDE(SUM(clicks), NULLIF(SUM(impressions), 0)) AS overall_ctr,
        SAFE_DIVIDE(SUM(spend), NULLIF(SUM(clicks), 0)) AS avg_cost_per_click
      FROM `nd-agentspace-sbx.media_performance.performance`
      WHERE
        (@date_from IS NULL OR date_time >= PARSE_DATE('%Y-%m-%d', @date_from))
        AND (@date_to IS NULL OR date_time <= PARSE_DATE('%Y-%m-%d', @date_to))
    description: |
      Summarize overall media performance: total metrics, campaign phases, publishers, platforms and key ratios.

 top_campaigns_by_sales:
    kind: bigquery-sql
    source: my-bq-source
    statement: |
      SELECT
        ad_campaign,
        SUM(impressions) AS total_impressions,
        SUM(sales) AS total_sales
      FROM `nd-agentspace-sbx.media_performance.performance`
      GROUP BY ad_campaign
      ORDER BY total_sales DESC
      LIMIT 10
    description: |
      List the top 10 campaigns by total sales.

 platform_performance_breakdown:
    kind: bigquery-sql
    source: my-bq-source
    statement: |
      SELECT
        platform,
        SUM(impressions) AS total_impressions,
        SUM(sales) AS total_sales,
        SAFE_DIVIDE(SUM(sales), NULLIF(SUM(impressions), 0)) AS sales_per_impression
      FROM `nd-agentspace-sbx.media_performance.performance`
      GROUP BY platform
      ORDER BY total_sales DESC
    description: |
      Show performance breakdown by platform, including sales per impression.

 daily_performance_trend:
    kind: bigquery-sql
    source: my-bq-source
    statement: |
      SELECT
        date,
        SUM(impressions) AS total_impressions,
        SUM(sales) AS total_sales
      FROM `nd-agentspace-sbx.media_performance.performance`
      GROUP BY date
      ORDER BY date DESC
    description: |
      Show daily trend of impressions and sales.

 campaign_details:
    kind: bigquery-sql
    source: my-bq-source
    parameters:
      - name: campaign_filter
        type: string
        description: Filter by campaign phase (optional)
    statement: |
      SELECT
        date_time as date,
        line_id,
        campaign_phase,
        publisher,
        platform,
        spend,
        impressions,
        clicks,
        landing_page_views,
        brochure_views,
        completed_views
      FROM `nd-agentspace-sbx.media_performance.performance`
      WHERE
        (@campaign_filter IS NULL OR LOWER(campaign_phase) LIKE LOWER(CONCAT('%', @campaign_filter, '%')))
      ORDER BY date_time DESC, campaign_phase
      LIMIT 100
    description: |
      Show detailed records for recent campaign performance with optional campaign filter (last 100 rows).

 # Recharts-friendly visualization tools
 daily_spend_trend:
    kind: bigquery-sql
    source: my-bq-source
    parameters:
      - name: days_back
        type: integer
        description: Number of days to look back (default 30)
      - name: campaign_phase_filter
        type: string
        description: Filter by campaign phase (optional)
    statement: |
      SELECT
        date_time as name,
        SUM(spend) as value
      FROM `nd-agentspace-sbx.media_performance.media_campaign_performance`
      WHERE
        date_time >= DATE_SUB(CURRENT_DATE(), INTERVAL COALESCE(@days_back, 30) DAY)
        AND (@campaign_phase_filter IS NULL OR LOWER(campaign_phase) LIKE LOWER(CONCAT('%', @campaign_phase_filter, '%')))
      GROUP BY date_time
      ORDER BY date_time
    description: |
      Returns daily spend trend in Recharts format with 'name' (date) and 'value' (spend) columns for line charts.

 publisher_spend_breakdown:
    kind: bigquery-sql
    source: my-bq-source
    parameters:
      - name: date_from
        type: string
        description: Start date (YYYY-MM-DD format, optional)
      - name: date_to
        type: string
        description: End date (YYYY-MM-DD format, optional)
    statement: |
      SELECT
        publisher as name,
        SUM(spend) as value
      FROM `nd-agentspace-sbx.media_performance.media_campaign_performance`
      WHERE
        (@date_from IS NULL OR date_time >= PARSE_DATE('%Y-%m-%d', @date_from))
        AND (@date_to IS NULL OR date_time <= PARSE_DATE('%Y-%m-%d', @date_to))
      GROUP BY publisher
      ORDER BY value DESC
      LIMIT 10
    description: |
      Returns publisher spend breakdown in Recharts format with 'name' (publisher) and 'value' (spend) for bar/pie charts.

 campaign_performance_comparison:
    kind: bigquery-sql
    source: my-bq-source
    parameters:
      - name: metric
        type: string
        description: Metric to compare (spend, impressions, clicks, landing_page_views)
      - name: date_from
        type: string
        description: Start date (YYYY-MM-DD format, optional)
      - name: date_to
        type: string
        description: End date (YYYY-MM-DD format, optional)
    statement: |
      SELECT
        campaign_phase as name,
        CASE @metric
          WHEN 'spend' THEN SUM(spend)
          WHEN 'impressions' THEN SUM(impressions)
          WHEN 'clicks' THEN SUM(clicks)
          WHEN 'landing_page_views' THEN SUM(landing_page_views)
          ELSE SUM(spend)
        END as value
      FROM `nd-agentspace-sbx.media_performance.media_campaign_performance`
      WHERE
        (@date_from IS NULL OR date_time >= PARSE_DATE('%Y-%m-%d', @date_from))
        AND (@date_to IS NULL OR date_time <= PARSE_DATE('%Y-%m-%d', @date_to))
        AND campaign_phase IS NOT NULL
      GROUP BY campaign_phase
      ORDER BY value DESC
      LIMIT 10
    description: |
      Returns campaign phase performance comparison in Recharts format with 'name' (campaign) and 'value' (selected metric).

 platform_engagement_metrics:
    kind: bigquery-sql
    source: my-bq-source
    parameters:
      - name: date_from
        type: string
        description: Start date (YYYY-MM-DD format, optional)
      - name: date_to
        type: string
        description: End date (YYYY-MM-DD format, optional)
    statement: |
      SELECT
        platform as name,
        SAFE_DIVIDE(SUM(clicks), NULLIF(SUM(impressions), 0)) * 100 as value
      FROM `nd-agentspace-sbx.media_performance.media_campaign_performance`
      WHERE
        (@date_from IS NULL OR date_time >= PARSE_DATE('%Y-%m-%d', @date_from))
        AND (@date_to IS NULL OR date_time <= PARSE_DATE('%Y-%m-%d', @date_to))
        AND platform IS NOT NULL
      GROUP BY platform
      HAVING SUM(impressions) > 0
      ORDER BY value DESC
      LIMIT 10
    description: |
      Returns platform click-through rates in Recharts format with 'name' (platform) and 'value' (CTR %) for comparison charts.

 weekly_performance_trend:
    kind: bigquery-sql
    source: my-bq-source
    parameters:
      - name: weeks_back
        type: integer
        description: Number of weeks to look back (default 12)
      - name: metric
        type: string
        description: Metric to trend (spend, impressions, clicks, landing_page_views)
    statement: |
      SELECT
        FORMAT_DATE('%Y-W%U', date_time) as name,
        CASE @metric
          WHEN 'spend' THEN SUM(spend)
          WHEN 'impressions' THEN SUM(impressions)
          WHEN 'clicks' THEN SUM(clicks)
          WHEN 'landing_page_views' THEN SUM(landing_page_views)
          ELSE SUM(spend)
        END as value
      FROM `nd-agentspace-sbx.media_performance.media_campaign_performance`
      WHERE
        date_time >= DATE_SUB(CURRENT_DATE(), INTERVAL COALESCE(@weeks_back, 12) * 7 DAY)
      GROUP BY FORMAT_DATE('%Y-W%U', date_time)
      ORDER BY name
    description: |
      Returns weekly performance trend in Recharts format with 'name' (week) and 'value' (selected metric) for line charts.

 top_performing_campaigns:
    kind: bigquery-sql
    source: my-bq-source
    parameters:
      - name: metric
        type: string
        description: Metric to rank by (spend, impressions, clicks, landing_page_views)
      - name: limit_rows
        type: integer
        description: Number of top campaigns to return (default 10)
      - name: date_from
        type: string
        description: Start date (YYYY-MM-DD format, optional)
      - name: date_to
        type: string
        description: End date (YYYY-MM-DD format, optional)
    statement: |
      SELECT
        CONCAT(campaign_phase, ' (', publisher, ')') as name,
        CASE @metric
          WHEN 'spend' THEN SUM(spend)
          WHEN 'impressions' THEN SUM(impressions)
          WHEN 'clicks' THEN SUM(clicks)
          WHEN 'landing_page_views' THEN SUM(landing_page_views)
          ELSE SUM(spend)
        END as value
      FROM `nd-agentspace-sbx.media_performance.media_campaign_performance`
      WHERE
        (@date_from IS NULL OR date_time >= PARSE_DATE('%Y-%m-%d', @date_from))
        AND (@date_to IS NULL OR date_time <= PARSE_DATE('%Y-%m-%d', @date_to))
        AND campaign_phase IS NOT NULL
        AND publisher IS NOT NULL
      GROUP BY campaign_phase, publisher
      ORDER BY value DESC
      LIMIT COALESCE(@limit_rows, 10)
    description: |
      Returns top performing campaigns in Recharts format with 'name' (campaign + publisher) and 'value' (selected metric).

 conversion_funnel_data:
    kind: bigquery-sql
    source: my-bq-source
    parameters:
      - name: campaign_phase_filter
        type: string
        description: Filter by campaign phase (optional)
      - name: date_from
        type: string
        description: Start date (YYYY-MM-DD format, optional)
      - name: date_to
        type: string
        description: End date (YYYY-MM-DD format, optional)
    statement: |
      WITH funnel_data AS (
        SELECT
          SUM(impressions) as impressions,
          SUM(clicks) as clicks,
          SUM(landing_page_views) as landing_page_views,
          SUM(brochure_views) as brochure_views,
          SUM(completed_views) as completed_views,
          SUM(application_page_view) as applications
        FROM `nd-agentspace-sbx.media_performance.media_campaign_performance`
        WHERE
          (@date_from IS NULL OR date_time >= PARSE_DATE('%Y-%m-%d', @date_from))
          AND (@date_to IS NULL OR date_time <= PARSE_DATE('%Y-%m-%d', @date_to))
          AND (@campaign_phase_filter IS NULL OR LOWER(campaign_phase) LIKE LOWER(CONCAT('%', @campaign_phase_filter, '%')))
      )
      SELECT 'Impressions' as name, impressions as value FROM funnel_data
      UNION ALL SELECT 'Clicks' as name, clicks as value FROM funnel_data
      UNION ALL SELECT 'Landing Page Views' as name, landing_page_views as value FROM funnel_data
      UNION ALL SELECT 'Brochure Views' as name, brochure_views as value FROM funnel_data
      UNION ALL SELECT 'Completed Views' as name, completed_views as value FROM funnel_data
      UNION ALL SELECT 'Applications' as name, applications as value FROM funnel_data
      ORDER BY value DESC
    description: |
      Returns conversion funnel data in Recharts format with 'name' (funnel stage) and 'value' (count) for funnel visualization.

toolsets:
 public_bq_toolset:
   - search_release_notes_bq
 media_performance_toolset:
   - analyze_media_performance
   - summarize_media_performance
   - top_campaigns_by_sales
   - platform_performance_breakdown
   - daily_performance_trend
   - campaign_details
 media_performance_recharts_friendly:
   - daily_spend_trend
   - publisher_spend_breakdown
   - campaign_performance_comparison
   - platform_engagement_metrics
   - weekly_performance_trend
   - top_performing_campaigns
   - conversion_funnel_data
